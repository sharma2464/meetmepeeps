import { Button, Form, Input, Row, Select, Space } from "antd";
import dayjs from "dayjs";
import Head from "next/head";
import Image from "next/image";
import Link from "next/link";
import { useRouter } from "next/router";
import { Fragment, useEffect, useState } from "react";
import { useAuth } from "../config/AuthContext";
import styles from "../styles/Home.module.css";

var weekOfYear = require("dayjs/plugin/weekOfYear");
var weekYear = require("dayjs/plugin/weekYear");
dayjs.extend(weekYear);
dayjs.extend(weekOfYear);

export default function Home() {
  const [slotsForm] = Form.useForm();
  const router = useRouter();
  const { authenticated, user, login, logout } = useAuth();
  const thisWeek = dayjs().week();
  const thisDate = dayjs().format();
  const [currentWeek, setCurrentWeek] = useState(thisWeek);

  useEffect(() => {
    dayjs().week(currentWeek);
    console.log("week", currentWeek);
    console.log("updated", dayjs().week());
  }, [currentWeek]);

  const handleOnSlotsFormFinish = (values) => {
    console.log("slotsForm values", values);
  };

  // useEffect(() => {
  //   if (!authenticated) {
  //     router.push("/signin");
  //   }
  // }, [authenticated, router]);

  if (!authenticated) {
    return <>Loading...</>;
  }

  if (authenticated) {
    return (
      <div className={styles.container}>
        <Head>
          <title>Create Next App</title>
          <meta name="description" content="Generated by create next app" />
          <link rel="icon" href="/favicon.ico" />
        </Head>

        <main className={styles.main}>
          <nav>
            {authenticated && user ? (
              <>
                <Button onClick={logout}>
                  {user?.displayName}&nbsp; Logout
                </Button>
              </>
            ) : (
              <Link href="/signin">Signin</Link>
            )}
          </nav>

          <h1 className={styles.title}>
            Welcome to <a href="https://www.meetmepeeps.com">MeetMePeeps!</a>
          </h1>

          <div>
            {currentWeek && (
              <>
                <Button
                  onClick={() => {
                    setCurrentWeek(currentWeek - 1);
                  }}
                >
                  {"<"}
                </Button>
                Current Week: {currentWeek}
                <Button
                  onClick={() => {
                    setCurrentWeek(currentWeek + 1);
                  }}
                >
                  {">"}
                </Button>
                <br />
                {dayjs().format("DD-MM-YYYY | hh:mm:A")}
                {thisDate}
              </>
            )}
            <Form
              form={slotsForm}
              name="slots"
              onFinish={handleOnSlotsFormFinish}
              size="small"
              layout="horizontal"
            >
              <Form.Item name={"week_" + currentWeek}>
                {[
                  "Sunday",
                  "Monday",
                  "Tuesday",
                  "Wednesday",
                  "Thursday",
                  "Friday",
                  "Saturday",
                ].map((day, idx) => {
                  return (
                    <Fragment key={idx}>
                      <Row>
                        <Space>
                          <Form.Item name={day.toLowerCase() + "_start"}>
                            <Input type="time" />
                          </Form.Item>
                          <Form.Item name={day.toLowerCase() + "_end"}>
                            <Input type="time" />
                          </Form.Item>
                          <Form.Item name={day.toLowerCase() + "_duration"}>
                            <Select
                              options={[
                                { label: "15 Miutes", value: 15 },
                                { label: "30 Miutes", value: 30 },
                              ]}
                              style={{ width: "100px" }}
                            />
                          </Form.Item>
                        </Space>
                      </Row>
                    </Fragment>
                  );
                })}
              </Form.Item>

              <Button type="primary" htmlType="submit" block>
                Update
              </Button>
            </Form>

            <form
              name="slots"
              onSubmit={(e) => {
                e.preventDefault();
                const data = { ...e };
                //  &&
                // e?.target?.filter((t, i) => {
                //   return t.nodeName === "INPUT";
                // });
                console.log("calendar:", e);
                console.log("data:", data);
              }}
              style={{ display: "none" }}
            >
              {[
                "Sunday",
                "Monday",
                "Tuesday",
                "Wednesday",
                "Thursday",
                "Friday",
                "Saturday",
              ].map((day, idx) => {
                return (
                  <div key={idx}>
                    <span>
                      <input type="time" name={day.toLowerCase() + "_start"} />
                    </span>
                    |
                    <span>
                      <input type="time" name={day.toLowerCase() + "_end"} />
                    </span>
                    |
                    <span>
                      <select name={day.toLowerCase() + "_end"}>
                        <option value="15">15</option>
                        <option value="30">30</option>
                      </select>
                      &nbsp;minutes
                      {/* <input type="number" maxLength={2} max={} name={day.toLowerCase()+"_end"} /> */}
                    </span>
                  </div>
                );
              })}
              <button type="submit">Update</button>
            </form>
          </div>

          <div style={{ display: "none" }}>
            <p className={styles.description}>
              Get started by editing{" "}
              <code className={styles.code}>pages/index.js</code>
            </p>

            <div className={styles.grid}>
              <a href="https://nextjs.org/docs" className={styles.card}>
                <h2>Documentation &rarr;</h2>
                <p>Find in-depth information about Next.js features and API.</p>
              </a>

              <a href="https://nextjs.org/learn" className={styles.card}>
                <h2>Learn &rarr;</h2>
                <p>
                  Learn about Next.js in an interactive course with quizzes!
                </p>
              </a>

              <a
                href="https://github.com/vercel/next.js/tree/canary/examples"
                className={styles.card}
              >
                <h2>Examples &rarr;</h2>
                <p>Discover and deploy boilerplate example Next.js projects.</p>
              </a>

              <a
                href="https://vercel.com/new?utm_source=create-next-app&utm_medium=default-template&utm_campaign=create-next-app"
                className={styles.card}
              >
                <h2>Deploy &rarr;</h2>
                <p>
                  Instantly deploy your Next.js site to a public URL with
                  Vercel.
                </p>
              </a>
            </div>
          </div>
        </main>

        <footer className={styles.footer}>
          <a
            href="https://vercel.com?utm_source=create-next-app&utm_medium=default-template&utm_campaign=create-next-app"
            target="_blank"
            rel="noopener noreferrer"
          >
            Powered by{" "}
            <span className={styles.logo}>
              <Image
                src="/vercel.svg"
                alt="Vercel Logo"
                width={72}
                height={16}
              />
            </span>
          </a>
        </footer>
      </div>
    );
  }
  // else {
  //   return (
  //     <>
  //       You are not signed in.
  //       <br />
  //       <Link href="/signin">Signin</Link>
  //     </>
  //   );
  // }

  // return <>Oops</>;
  return router.replace("/signin");
}
